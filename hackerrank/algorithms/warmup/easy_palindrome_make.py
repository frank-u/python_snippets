"""
Problem Statement
    Джеймс раздобыл любовное письмо, которое его друг Гарри написал своей девуш-
ке. Будучи шутником, Джеймс решил изменить его. Он превратил все слова в палинд-
ромы. В каждом слове он  изменял буквы  только на меньшие,  например, 'd' он мог
превратить  в 'c' и это считалось  одной  операцией. ( Он мог  изменять значение
только до буквы 'a', 'a' не может быть изменено в 'z') Найдите минимальное коли-
чество операций для превращения слова в палиндром.

Формат ввода
    Первая строка содержит целое число T - количество тестов.  Следующие T строк
содержат по одному слову.

Формат вывода
    В каждой стоке содержится одно число, соответствующее  минимальному количес-
тву операций для данного теста.

Ограничения
    1 ≤ T ≤ 10
    1 ≤ длина слова ≤ 104
    Все символы - только строчные буквы английского алфавита от 'a' до 'z'

Пример.
    Ввод
        3
        abc
        abcba
        abcd
    Вывод
        2
        0
        4
"""


def distance_to_equal_chars(char1, char2):
    return abs(ord(char1)-ord(char2))


def calc_distance_to_palindrome(s):
    if len(s) <= 1:
        return 0
    dist = 0
    for char in range(len(s)//2):
        dist += distance_to_equal_chars(s[char], s[-char-1])
    return dist


# ---------------------------------------------------------------------------- #
T = int(input())  # number of test cases
tests = []
for i in range(T):
    N = input()  # number of cycles in test scenario
    tests.append(N)

#tests = ['a', 'ab', 'aba', 'baba', 'cacad']
#tests = ['abc', 'abcba', 'abcd']
for i in tests:
    print(calc_distance_to_palindrome(i))
